version: '0.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - jsonbin-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jsonbin-network

  mysql:
    image: mysql:latest
    container_name: jsonbin-mysql
    environment:
      MYSQL_DATABASE: json_bin
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3307:3306"
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci"]
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - jsonbin-network

  redis:
    image: redis:latest
    container_name: jsonbin-redis
    ports:
      - "6379:6379"
    networks:
      - jsonbin-network
    command: redis-server

  spring-app:
    build: .
    container_name: jsonbin-spring
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/json_bin?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "1234"
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - mysql
      - redis
    networks:
      - jsonbin-network

networks:
  jsonbin-network:

volumes:
  kafka-data:
  mysql_data:
